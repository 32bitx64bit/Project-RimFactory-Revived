<?xml version="1.0" encoding="utf-8"?>
<Defs>

  <!--=========================== Drones drop down category ==================================-->
  <DesignatorDropdownGroupDef>
    <defName>Drone_gr</defName>
  </DesignatorDropdownGroupDef>

  <DesignatorDropdownGroupDef>
    <defName>MiniDrone_gr</defName>
  </DesignatorDropdownGroupDef>

  <!--=========================== Mini drone station Base ==================================-->
  <ThingDef Name="PRF_MiniDroneStation" ParentName="PRFBuildingBase" Abstract="True">
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>      <!-- structure HP -->
      <Flammability>1.0</Flammability>      <!-- A thing with a Flammability of 0.0 won't start burning at all, while one with a Flammability of 1.0 will start burning very quickly. -->
      <Beauty>0</Beauty>      <!-- +is good -is bad ;) -->
      <Mass>70</Mass>      <!-- mass in kg -->
      <WorkToBuild>1500</WorkToBuild>
    </statBases>
    <uiIconScale>0.7</uiIconScale>
    <drawGUIOverlay>true</drawGUIOverlay>
    <graphicData>
      <graphicClass>Graphic_Single</graphicClass>      <!-- Graphic_Multi, Graphic_Single chose that type texture used -->
      <shaderType>Transparent</shaderType>      <!-- used when using mask and such eq. CutoutComplex others: None, Cutout, CutoutFlying, CutoutPlant, CutoutSkin, Transparent, TransparentPostLight, MetaOverlay, Mote, MoteGlow -->
      <damageData>
        <rect>(0.05,0.1,0.9,0.9)</rect>
        <cornerTL>Damage/Corner</cornerTL>
        <cornerTR>Damage/Corner</cornerTR>
      </damageData>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>    <!-- The layer this thing is rendered on. Usually the same value as category. -->
    <passability>PassThroughOnly</passability>    <!-- Whether itâ€™s traversable or not.  Standable, PassThroughOnly, Impassable -->
    <blockLight>false</blockLight>    <!-- 	Whether this building can block light or not. -->
    <blockWind>false</blockWind>    <!-- 	Whether this building can block wind or not. -->
    <fillPercent>0.5</fillPercent>    <!-- How much cover it will provide. 0.0 to 1.0 -->
    <pathCost>70</pathCost>    <!-- how hard it is to walk through -->
    <castEdgeShadows>true</castEdgeShadows>
    <size>(1,1)</size>    <!-- Ingame cell/ground size (x,y) -->
    <minifiedDef>MinifiedThing</minifiedDef>    <!-- Sets if a item should be moveable vanilla reinstall/uninstall -->
    <thingCategories>
      <li>BuildingsAutomation</li>
    </thingCategories>
    <constructionSkillPrerequisite>5</constructionSkillPrerequisite>    <!-- Sets needed cunstruction skill to craft stuff -->
    <tickerType>Normal</tickerType>    <!-- How often game will request readout on time/progress dosent affect speed (normal, long, rare, never) -->
    <rotatable>false</rotatable>    <!-- allow rotation or not, can be used with or without Graphic_Multi  -->
    <designationCategory>Industrial</designationCategory>    <!--architect menu location-->
    <staticSunShadowHeight>0.1</staticSunShadowHeight>    <!-- staticSunShadowHeight defines how much of a shadow the strucure casts (Range: 0.0 - 1.0) -->
    <constructEffect>ConstructMetal</constructEffect>
    <placeWorkers>
      <li>ProjectRimFactory.Drones.PlaceWorker_DroneStation</li>
    </placeWorkers>
    <comps>      <!-- 	A C# class describing what should happen when the thing is interacted with in a specific way. This class might need additional tags to work. -->
      <li Class="CompProperties_Flickable" />
      <li>
        <compClass>ProjectRimFactory.Common.CompPRFHelp</compClass>        <!-- PRF Internal help tab/icon setup in language -->
      </li>
    </comps>
    <designatorDropdown>MiniDrone_gr</designatorDropdown>
  </ThingDef>

  <!--=========================== Mini drone station 1 ==================================-->
  <ThingDef ParentName="PRF_MiniDroneStation">
    <defName>PRF_minidronestation</defName>
    <label>Mini drone station</label>
    <thingClass>ProjectRimFactory.Drones.Building_DroneStationRefuelable</thingClass>
    <graphicData>
      <texPath>Drones/MiniDroneStation</texPath>
    </graphicData>
    <description>A building that now using Drones. Can autonomously plant and harvest crops in a 11 cell square around it. Will not be affected by any stat modifiers.</description>
    <costList>
      <PRFMachineFrameSmall>1</PRFMachineFrameSmall>
      <PRFDroneModule>2</PRFDroneModule>
      <Steel>30</Steel>
      <Plasteel>20</Plasteel>
      <ComponentIndustrial>3</ComponentIndustrial>
    </costList>
    <inspectorTabs>
      <li>ProjectRimFactory.Common.ITab_PowerSupply</li>      <!-- Power boost -->
    </inspectorTabs>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <shortCircuitInRain>false</shortCircuitInRain>
        <basePowerConsumption>500</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Refuelable">
        <fuelConsumptionRate>0</fuelConsumptionRate>
        <fuelCapacity>4</fuelCapacity>
        <fuelConsumptionPerTickInRain>0</fuelConsumptionPerTickInRain>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <fuelFilter>
          <thingDefs>
            <li>PRFDroneModule</li>
          </thingDefs>
        </fuelFilter>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>1</initialConfigurableTargetFuelLevel>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
      </li>
      <li Class="ProjectRimFactory.Common.CompProperties_PowerWorkSetting">
        <speedSetting>false</speedSetting>
        <rangeSetting>true</rangeSetting>
        <minPowerForRange>0</minPowerForRange>
        <minRange>4</minRange>
        <maxPowerForRange>2000</maxPowerForRange>
        <maxRange>10</maxRange>
        <rangeType>ProjectRimFactory.Common.RectRange</rangeType>
      </li>
    </comps>
    <modExtensions>
      <li Class="ProjectRimFactory.Drones.DefModExtension_DroneStation">
        <displayDormantDrones>true</displayDormantDrones>        <!-- Drones will sit on top while not working -->
        <workTypes>
          <li>Firefighter</li>
          <li>BasicWorker</li>
          <li>Hauling</li>
          <li>Cleaning</li>
        </workTypes>
      </li>
    </modExtensions>
    <researchPrerequisites></researchPrerequisites>
  </ThingDef>
  <!--=========================== Mini drone station 2 ==================================-->
  <ThingDef ParentName="PRF_MiniDroneStation">
    <defName>PRF_minidronestationtwo</defName>
    <label>Mini drone 2</label>
    <thingClass>ProjectRimFactory.Drones.Building_DroneStationRefuelable</thingClass>
    <graphicData>
      <texPath>Farm/Cultivator</texPath>
    </graphicData>
    <description>A building that now using Drones. Can autonomously plant and harvest crops in a 11 cell square around it. Will not be affected by any stat modifiers.</description>
    <costList>
      <PRFMachineFrameSmall>1</PRFMachineFrameSmall>
      <PRFDroneModule>2</PRFDroneModule>
      <Steel>30</Steel>
      <Plasteel>20</Plasteel>
      <ComponentIndustrial>3</ComponentIndustrial>
    </costList>
    <inspectorTabs>
    </inspectorTabs>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <shortCircuitInRain>false</shortCircuitInRain>
        <basePowerConsumption>500</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Refuelable">
        <fuelConsumptionRate>0</fuelConsumptionRate>
        <fuelCapacity>4</fuelCapacity>
        <fuelConsumptionPerTickInRain>0</fuelConsumptionPerTickInRain>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <fuelFilter>
          <thingDefs>
            <li>PRFDroneModule</li>
          </thingDefs>
        </fuelFilter>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>1</initialConfigurableTargetFuelLevel>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
      </li>
    </comps>
    <modExtensions>
      <li Class="ProjectRimFactory.Drones.DefModExtension_DroneStation">
        <displayDormantDrones>true</displayDormantDrones>        <!-- Drones will sit on top while not working -->
        <SquareJobRadius>5</SquareJobRadius>
        <workTypes>
          <li>Firefighter</li>
          <li>BasicWorker</li>
          <li>Hauling</li>
          <li>Cleaning</li>
        </workTypes>
      </li>
    </modExtensions>
    <researchPrerequisites></researchPrerequisites>
  </ThingDef>


  <!--================================== Drone stations ======================================-->
  <!--================================== Drone Station Base ==================================-->
  <ThingDef ParentName="PRFBuildingBase" Name="PRF_DroneStationBase" Abstract="True">
    <thingClass>ProjectRimFactory.Drones.Building_DroneStationRefuelable</thingClass>
    <graphicData>
      <texPath>Drones/DroneBase_2x2</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <shaderType>CutoutComplex</shaderType>
      <drawSize>(2, 2)</drawSize>
    </graphicData>
    <size>(2, 2)</size>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <fillPercent>0.5</fillPercent>
    <castEdgeShadows>false</castEdgeShadows>
    <tickerType>Normal</tickerType>
    <statBases>
      <WorkToBuild>3000</WorkToBuild>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>1.0</Flammability>
    </statBases>
    <drawGUIOverlay>true</drawGUIOverlay>
    <comps>
      <li>
        <compClass>ProjectRimFactory.Common.CompPRFHelp</compClass>
      </li>
      <li Class="CompProperties_Refuelable">
        <fuelConsumptionRate>0</fuelConsumptionRate>
        <fuelCapacity>30</fuelCapacity>        <!-- Max Drone Amounts -->
        <fuelConsumptionPerTickInRain>0</fuelConsumptionPerTickInRain>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <fuelFilter>
          <thingDefs>
            <li>PRFDroneModule</li>
          </thingDefs>
        </fuelFilter>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>5</initialConfigurableTargetFuelLevel>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
      </li>
    </comps>
    <rotatable>false</rotatable>
    <designationCategory>Industrial</designationCategory>
    <placeWorkers>
      <li>ProjectRimFactory.Drones.PlaceWorker_DroneStation</li>
    </placeWorkers>
    <designatorDropdown>Drone_gr</designatorDropdown>
  </ThingDef>

  <!--=========================== Fire Drone Station ==================================-->
  <ThingDef ParentName="PRF_DroneStationBase">
    <defName>PRF_FireDroneStation</defName>
    <label>fire drone Station</label>
    <description>A station that holds up to 20 drones, capable of fighting fires. Consumes considerable power. Typically your colony only needs 1 of these.</description>
    <thingClass>ProjectRimFactory.Drones.Building_DroneStationSpecialGraphics</thingClass>
    <graphicData>
      <texPath>Drones/DroneStationCaretaker</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <shaderType>CutoutComplex</shaderType>
      <drawSize>(2,2)</drawSize>
    </graphicData>
    <size>(2,2)</size>
    <costList>
      <Steel>100</Steel>
      <ComponentSpacer>5</ComponentSpacer>
      <ComponentIndustrial>5</ComponentIndustrial>
      <PRFWeakAIChip>12</PRFWeakAIChip>
    </costList>
    <modExtensions>
      <li Class="ProjectRimFactory.Drones.DefModExtension_DroneStation">
        <displayDormantDrones>true</displayDormantDrones>
        <workTypes>
          <li>Firefighter</li>
        </workTypes>
      </li>
    </modExtensions>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <shortCircuitInRain>false</shortCircuitInRain>
        <basePowerConsumption>1000</basePowerConsumption>
      </li>
      <li Class="CompProperties_Refuelable">
        <fuelConsumptionRate>0</fuelConsumptionRate>
        <fuelCapacity>20</fuelCapacity>        <!-- Max Drone Amounts -->
        <fuelConsumptionPerTickInRain>0</fuelConsumptionPerTickInRain>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <fuelFilter>
          <thingDefs>
            <li>PRFDroneModule</li>
          </thingDefs>
        </fuelFilter>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>5</initialConfigurableTargetFuelLevel>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
      </li>
    </comps>
    <researchPrerequisites>
    </researchPrerequisites>
  </ThingDef>

</Defs>